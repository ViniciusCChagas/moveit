{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/viniciuschagas/Desktop/NLW4/moveit/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currrentExperience,\n    1: setCurrrentExperience\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState(0);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      levelUp,\n      currrentExperience,\n      challengesCompleted\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/home/viniciuschagas/Desktop/NLW4/moveit/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengesContext","ChallengesProvider","children","level","setLevel","currrentExperience","setCurrrentExperience","challengesCompleted","setChallengesCompleted","levelUp"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAMP,OAAO,SAASG,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAmE;AACzE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACM,kBAAD;AAAA,OAAqBC;AAArB,MAA8CP,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM;AAAA,OAACQ,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDT,QAAQ,CAAC,CAAD,CAA9D;;AAEA,WAASU,OAAT,GAAmB;AAClBL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA;;AAED,sBACC,QAAC,iBAAD,CAAmB,QAAnB;AACC,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASM,MAAAA,OAAT;AAAkBJ,MAAAA,kBAAlB;AAAsCE,MAAAA;AAAtC,KADR;AAAA,cAGEL;AAHF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\n\nexport const ChallengesContext = createContext({});\n\ninterface ChallengesProviderProps {\n\tchildren: ReactNode;\n}\n\nexport function ChallengesProvider({ children }: ChallengesProviderProps) {\n\tconst [level, setLevel] = useState(1);\n\tconst [currrentExperience, setCurrrentExperience] = useState(0);\n\tconst [challengesCompleted, setChallengesCompleted] = useState(0);\n\n\tfunction levelUp() {\n\t\tsetLevel(level + 1);\n\t}\n\n\treturn (\n\t\t<ChallengesContext.Provider\n\t\t\tvalue={{ level, levelUp, currrentExperience, challengesCompleted }}\n\t\t>\n\t\t\t{children}\n\t\t</ChallengesContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}